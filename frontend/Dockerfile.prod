############################################
# Stage 1 — Build frontend with Node
############################################
FROM node:alpine AS frontend-build
WORKDIR /app

COPY package*.json ./
RUN npm install --production

COPY . .
RUN npm run build


############################################
# Stage 2 — Debian + NGINX + ModSecurity
############################################
FROM debian AS production

USER root

############################################
# 1. Install dependencies
############################################
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    nginx \
    libnginx-mod-http-modsecurity \
    modsecurity-crs \
    curl \
    openssl \
    ca-certificates && \
    rm -rf /var/lib/apt/lists/*

############################################
# 2. Create directories and TLS certificate
############################################
RUN mkdir -p /etc/nginx/certs \
    /etc/modsecurity \
    /var/log/nginx \
    && openssl req -x509 -nodes -days 3650 \
         -subj "/C=US/ST=Dev/L=Local/O=DevCompany/CN=localhost" \
         -newkey rsa:2048 \
         -keyout /etc/nginx/certs/internal.key \
         -out /etc/nginx/certs/internal.crt \
    && chmod 640 /etc/nginx/certs/internal.key \
    && chmod 644 /etc/nginx/certs/internal.crt \
    && touch /var/log/nginx/modsec_audit.log \
    && chown -R www-data:www-data /var/log/nginx


############################################
# 3. ModSecurity configuration
############################################
# Basic ModSecurity config (you can mount or override with volumes in prod)
COPY nginx/modsec.conf /etc/modsecurity/modsecurity.conf

############################################
# 4. NGINX config
############################################
COPY nginx/nginx.conf /etc/nginx/nginx.conf

############################################
# 5. Copy frontend assets
############################################
COPY --from=frontend-build /app/dist /usr/share/nginx/html

############################################
# 7. Final setup
############################################
EXPOSE 80 443

CMD ["nginx", "-g", "daemon off;"]
