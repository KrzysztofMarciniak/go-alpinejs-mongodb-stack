############################################
# Stage 1 — Build Frontend Using Node
############################################
FROM node:alpine AS frontend-build
WORKDIR /app

# Install production dependencies
COPY package*.json ./
RUN npm install --production

# Build the frontend assets
COPY . .
RUN npm run build

############################################
# Stage 2 — Production Server with NGINX and ModSecurity
############################################
FROM debian AS production

USER root

# Install NGINX with ModSecurity and required tools
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        nginx \
        libnginx-mod-http-modsecurity \
        libnginx-mod-http-headers-more-filter \
        modsecurity-crs \
        curl \
        openssl \
        ca-certificates && \
    rm -rf /var/lib/apt/lists/*

# Create necessary directories and generate a self-signed TLS certificate
RUN mkdir -p /etc/nginx/certs \
             /etc/modsecurity \
             /var/log/nginx && \
    openssl req -x509 -nodes -days 3650 \
        -subj "/C=US/ST=Dev/L=Local/O=DevCompany/CN=localhost" \
        -newkey rsa:2048 \
        -keyout /etc/nginx/certs/internal.key \
        -out /etc/nginx/certs/internal.crt && \
    chmod 640 /etc/nginx/certs/internal.key && \
    chmod 644 /etc/nginx/certs/internal.crt && \
    touch /var/log/nginx/modsec_audit.log && \
    chown -R www-data:www-data /var/log/nginx

# Add ModSecurity configuration
COPY nginx/modsec.conf /etc/modsecurity/modsecurity.conf

# Add NGINX configuration
COPY nginx/nginx.conf /etc/nginx/nginx.conf

# Copy built frontend assets from previous stage
COPY --from=frontend-build /app/dist /usr/share/nginx/html

# Expose HTTP and HTTPS ports
EXPOSE 80 443

# Start NGINX in the foreground
CMD ["nginx", "-g", "daemon off;"]
