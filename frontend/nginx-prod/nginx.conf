user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  4096;   
    multi_accept on;             # Accept multiple new connections at once
    use epoll;                   # Linux‚Äêonly, best performance
}

http {
    ##
    # General Security & Performance Hardening
    ##
    server_tokens off;                # NGINX version
    client_max_body_size 20m;         # Prevent huge uploads
    client_body_timeout 10s;
    client_header_timeout 10s;
    send_timeout 10s;

    ##
    # Buffers and TCP settings
    ##
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 30s;            # Shorten keepalive to free resources faster
    keepalive_requests 100;           # Cap requests per connection
    reset_timedout_connection on;     # Drop slow clients immediately

    ##
    # Logging
    ##
    log_format main '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" '
                    '"$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main buffer=32k flush=5m;

    ##
    # MIME types & default
    ##
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # Gzip Compression
    ##
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_types
        text/plain
        text/css
        application/json
        application/javascript
        text/xml
        application/xml
        application/xml+rss
        text/javascript;

    include /etc/nginx/conf.d/*.conf;

    server {
        listen 80;
        server_name _;                    # Match any host name

        root /usr/share/nginx/html;
        index index.html;

        # Serve static files
        location / {
            try_files $uri $uri/ =404;
        }
        location /nginx_status {
        stub_status on;
        allow 127.0.0.1;              # Only localhost inside container
        allow 10.0.0.0/8;             # Docker networks
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;                     # Deny everyone else
        }
    }
}
